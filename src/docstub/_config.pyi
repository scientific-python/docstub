# File generated with docstub

import dataclasses
import logging
from collections.abc import Mapping
from pathlib import Path
from typing import ClassVar, Self

logger: logging.Logger

@dataclasses.dataclass(frozen=True, slots=True, kw_only=True)
class Config:
    TEMPLATE_PATH: ClassVar[Path]
    NUMPY_PATH: ClassVar[Path]

    types: dict[str, str] = ...
    type_prefixes: dict[str, str] = ...
    type_nicknames: dict[str, str] = ...
    ignore_files: list[str] = ...

    config_paths: tuple[Path, ...] = ...

    @classmethod
    def from_toml(cls, path: Path | str) -> Self: ...
    def merge(self, other: Self) -> Self: ...
    def to_dict(self) -> None: ...
    def __post_init__(self) -> None: ...
    def __repr__(self) -> str: ...
    @staticmethod
    def validate(mapping: Mapping) -> None: ...
